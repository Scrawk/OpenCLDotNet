<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenCLDotNet</name>
    </assembly>
    <members>
        <member name="M:OpenCLDotNet.Core.CL.CreateBuffer(OpenCLDotNet.Core.cl_context,OpenCLDotNet.Core.CL_MEM_FLAGS,OpenCLDotNet.Core.CL_ERROR@)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="flags"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.CreateBuffer(OpenCLDotNet.Core.cl_context,OpenCLDotNet.Core.CL_MEM_FLAGS,System.UInt32,System.Array,OpenCLDotNet.Core.CL_ERROR@)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="flags"></param>
            <param name="byte_size"></param>
            <param name="data"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.CreateSubBuffer(OpenCLDotNet.Core.cl_mem,OpenCLDotNet.Core.CL_MEM_FLAGS,OpenCLDotNet.Core.CLRegion1t,OpenCLDotNet.Core.CL_ERROR@)">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <param name="flags"></param>
            <param name="region"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetMemObjectInfoSize(OpenCLDotNet.Core.cl_mem,OpenCLDotNet.Core.CL_MEM_INFO,System.UInt32@)">
            <summary>
            
            </summary>
            <param name="memobj"></param>
            <param name="name"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetMemObjectInfo(OpenCLDotNet.Core.cl_mem,OpenCLDotNet.Core.CL_MEM_INFO,System.UInt32,System.UInt64@)">
            <summary>
            
            </summary>
            <param name="memobj"></param>
            <param name="name"></param>
            <param name="size"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetMemObjectInfo(OpenCLDotNet.Core.cl_mem,OpenCLDotNet.Core.CL_MEM_INFO,System.UInt32,System.UIntPtr@)">
            <summary>
            
            </summary>
            <param name="memobj"></param>
            <param name="name"></param>
            <param name="size"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetMemObjectInfo(OpenCLDotNet.Core.cl_mem,OpenCLDotNet.Core.CL_MEM_INFO,System.UInt32,OpenCLDotNet.Core.cl_object@)">
            <summary>
            
            </summary>
            <param name="memobj"></param>
            <param name="name"></param>
            <param name="size"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.RetainMemObject(OpenCLDotNet.Core.cl_mem)">
            <summary>
            
            </summary>
            <param name="mem"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.ReleaseMemObject(OpenCLDotNet.Core.cl_mem)">
            <summary>
            
            </summary>
            <param name="mem"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.EnqueueReadBuffer(OpenCLDotNet.Core.cl_command_queue,OpenCLDotNet.Core.cl_mem,System.Boolean,System.UInt32,System.UInt32,System.Array)">
            <summary>
            Enqueue commands to read from a buffer object to host memory.
            </summary>
            <param name="command">command_queue is a valid host  
            command-queue in which the read command will be queued. 
            command_queue and buffer must be created with the same 
            OpenCL context.></param>
            <param name="buffer">The buffer to read from.</param>
            <param name="blocking_read">If the read and write operations 
            are blocking or non-blocking</param>
            <param name="byte_offset">offset is the offset in bytes in the buffer
            object to read from or write to</param>
            <param name="byte_size">The size of the data in bytes.</param>
            <param name="data">The buffer to read into.</param>
            <returns>The error code.</returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.EnqueueWriteBuffer(OpenCLDotNet.Core.cl_command_queue,OpenCLDotNet.Core.cl_mem,System.Boolean,System.UInt32,System.UInt32,System.Array)">
            <summary>
            Enqueue commands to write to a buffer object from host memory.
            </summary>
            <param name="command">Refers to the command-queue in which the
            write command will be queued. command_queue and buffer must be
            created with the same OpenCL context.</param>
            <param name="buffer">The buffer to write to.</param>
            <param name="blocking_write">Indicates if the write operations 
            are blocking or nonblocking.</param>
            <param name="byte_offset">The offset in bytes in the buffer 
            object to write to.</param>
            <param name="byte_size">The size of the data in bytes.</param>
            <param name="data">The data to write from.</param>
            <returns>The error code.</returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.EnqueueReadImage(OpenCLDotNet.Core.cl_command_queue,OpenCLDotNet.Buffers.CLImage,System.Boolean,OpenCLDotNet.Core.CLRegion3t,System.Array)">
            <summary>
            Enqueues a command to read from a 2D or 3D image object to host memory.
            </summary>
            <param name="command">Refers to the command-queue in which the read command will be queued. 
            command_queue and image must be created with the same OpenCL context</param>
            <param name="image">The image to read from.</param>
            <param name="blocking_read">Indicates if the read operations are blocking or non-blocking.</param>
            <param name="region">Defines the region in the image to read from.</param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.EnqueueWriteImage(OpenCLDotNet.Core.cl_command_queue,OpenCLDotNet.Buffers.CLImage,System.Boolean,OpenCLDotNet.Core.CLRegion3t,System.Array)">
            <summary>
            
            </summary>
            <param name="command"></param>
            <param name="image"></param>
            <param name="blocking_write"></param>
            <param name="region"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.EnqueueFillBuffer(OpenCLDotNet.Core.cl_command_queue,OpenCLDotNet.Core.cl_mem,System.Array,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            
            </summary>
            <param name="command"></param>
            <param name="buffer"></param>
            <param name="pattern">A pointer to the data pattern of size pattern_size in bytes.</param>
            <param name="pattern_size">pattern_size in bytes.</param>
            <param name="offset">The location in bytes of the region being 
            filled in buffer and must be a multiple of pattern_size.</param>
            <param name="size">The size in bytes of region being filled 
            in buffer and must be a multiple of pattern_size.</param>
            <returns>The error code.</returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.EnqueueCopyBuffer(OpenCLDotNet.Core.cl_command_queue,OpenCLDotNet.Core.cl_mem,OpenCLDotNet.Core.cl_mem,System.UInt32,System.UInt32)">
            <summary>
            Enqueues a command to copy a buffer object to another buffer object.
            </summary>
            <param name="command">The command-queue in which the copy command will 
            be queued. The OpenCL context associated with command_queue, src_buffer, 
            and dst_buffer must be the same.</param>
            <param name="src_buffer">The buffer to read from.</param>
            <param name="dst_buffer">The buffer to write to.</param>
            <param name="byte_offset">The offset in bytes where to begin copying data from src_buffer.</param>
            <param name="byte_size">Refers to the size in bytes to copy.</param>
            <returns>The error code.</returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.EnqueueCopyBufferRect(OpenCLDotNet.Core.cl_command_queue,OpenCLDotNet.Core.cl_mem,OpenCLDotNet.Core.cl_mem,OpenCLDotNet.Core.CLPoint3t,OpenCLDotNet.Core.CLPoint3t,OpenCLDotNet.Core.CLPoint3t,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,OpenCLDotNet.Core.cl_event[],OpenCLDotNet.Core.cl_event@)">
            <summary>
            
            </summary>
            <param name="command"></param>
            <param name="src_buffer"></param>
            <param name="dst_buffer"></param>
            <param name="src_origin"></param>
            <param name="dst_origin"></param>
            <param name="region"></param>
            <param name="src_row_pitch"></param>
            <param name="src_slice_pitch"></param>
            <param name="dst_row_pitch"></param>
            <param name="dst_slice_pitch"></param>
            <param name="wait_list_size"></param>
            <param name="wait_list"></param>
            <param name="_event"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.EnqueueFillImage(OpenCLDotNet.Core.cl_command_queue,OpenCLDotNet.Core.cl_mem,OpenCLDotNet.Core.CLColorRGBA,OpenCLDotNet.Core.CLRegion3t,System.UInt32,OpenCLDotNet.Core.cl_event[],OpenCLDotNet.Core.cl_event@)">
            <summary>
            
            </summary>
            <param name="command"></param>
            <param name="image"></param>
            <param name="fill_color"></param>
            <param name="region"></param>
            <param name="wait_list_size"></param>
            <param name="wait_list"></param>
            <param name="_event"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.EnqueueCopyImage(OpenCLDotNet.Core.cl_command_queue,OpenCLDotNet.Core.cl_mem,OpenCLDotNet.Core.cl_mem,OpenCLDotNet.Core.CLPoint3t,OpenCLDotNet.Core.CLRegion3t,System.UInt32,OpenCLDotNet.Core.cl_event[],OpenCLDotNet.Core.cl_event@)">
            <summary>
            
            </summary>
            <param name="command"></param>
            <param name="src_image"></param>
            <param name="dst_image"></param>
            <param name="src_origin"></param>
            <param name="region"></param>
            <param name="wait_list_size"></param>
            <param name="wait_list"></param>
            <param name="_event"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.EnqueueCopyImageToBuffer(OpenCLDotNet.Core.cl_command_queue,OpenCLDotNet.Core.cl_mem,OpenCLDotNet.Core.cl_mem,OpenCLDotNet.Core.CLPoint3t,OpenCLDotNet.Core.CLPoint3t,System.UInt32,System.UInt32,OpenCLDotNet.Core.cl_event[],OpenCLDotNet.Core.cl_event@)">
            <summary>
            
            </summary>
            <param name="command"></param>
            <param name="src_image"></param>
            <param name="dst_buffer"></param>
            <param name="src_origin"></param>
            <param name="region"></param>
            <param name="dst_offset"></param>
            <param name="wait_list_size"></param>
            <param name="wait_list"></param>
            <param name="_event"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.EnqueueCopyBufferToImage(OpenCLDotNet.Core.cl_command_queue,OpenCLDotNet.Core.cl_mem,OpenCLDotNet.Core.cl_mem,System.UInt32,OpenCLDotNet.Core.CLPoint3t,OpenCLDotNet.Core.CLPoint3t,System.UInt32,OpenCLDotNet.Core.cl_event[],OpenCLDotNet.Core.cl_event@)">
            <summary>
            
            </summary>
            <param name="command"></param>
            <param name="src_buffer"></param>
            <param name="dst_image"></param>
            <param name="src_offset"></param>
            <param name="dst_origin"></param>
            <param name="region"></param>
            <param name="wait_list_size"></param>
            <param name="wait_list"></param>
            <param name="_event"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.EnqueueNDRangeKernel(OpenCLDotNet.Core.cl_command_queue,OpenCLDotNet.Core.cl_kernel,System.UInt32,OpenCLDotNet.Core.size_t[],OpenCLDotNet.Core.size_t[],OpenCLDotNet.Core.size_t[],System.UInt32,OpenCLDotNet.Core.cl_event[],OpenCLDotNet.Core.cl_event@)">
            <summary>
            
            </summary>
            <param name="command"></param>
            <param name="kernel"></param>
            <param name="work_dim"></param>
            <param name="global_work_offset"></param>
            <param name="global_work_size"></param>
            <param name="local_work_size"></param>
            <param name="wait_list_size"></param>
            <param name="wait_list"></param>
            <param name="_event"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.EnqueueBarrierWithWaitList(OpenCLDotNet.Core.cl_command_queue,System.UInt32,OpenCLDotNet.Core.cl_event[],OpenCLDotNet.Core.cl_event@)">
            <summary>
            
            </summary>
            <param name="command"></param>
            <param name="wait_list_size"></param>
            <param name="wait_list"></param>
            <param name="_event"></param>
            <returns></returns>
        </member>
        <member name="P:OpenCLDotNet.Core.CL.FormatTable">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.CreateImage(OpenCLDotNet.Core.cl_context,OpenCLDotNet.Core.CL_MEM_FLAGS,OpenCLDotNet.Buffers.CLImageFormat,OpenCLDotNet.Buffers.CLImageDescription,System.UInt32,System.Array,OpenCLDotNet.Core.CL_ERROR@)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="flags"></param>
            <param name="format"></param>
            <param name="desc"></param>
            <param name="byte_size"></param>
            <param name="data">Refers to a valid buffer memory object if image_type is CL_MEM_OBJECT_IMAGE1D_BUFFER. 
            Otherwise it must be NULL. For a 1D image buffer object, the image pixels are taken from the buffer 
            object's data store. When the contents of a buffer object's data store are modified, those changes 
            are reflected in the contents of the 1D image buffer object and vice-versa at corresponding sychronization points.
            The image_width * size of element in bytes must be ≤ size of buffer object data store..</param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetSupportedImageFormatsSize(OpenCLDotNet.Core.cl_context,OpenCLDotNet.Core.CL_MEM_FLAGS,OpenCLDotNet.Core.CL_MEM_OBJECT_TYPE,System.UInt32@)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="flags"></param>
            <param name="type"></param>
            <param name="num_formats"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetSupportedImageFormats(OpenCLDotNet.Core.cl_context,OpenCLDotNet.Core.CL_MEM_FLAGS,OpenCLDotNet.Core.CL_MEM_OBJECT_TYPE,OpenCLDotNet.Buffers.CLImageFormat[])">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="flags"></param>
            <param name="type"></param>
            <param name="formats"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.ClearFormatTable">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetSupportedImageFormats(OpenCLDotNet.Buffers.CLImageFormatKey,System.Collections.Generic.List{OpenCLDotNet.Buffers.CLImageFormat})">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="formats"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.ImageFormatIsSupported(OpenCLDotNet.Buffers.CLImageFormatKey,OpenCLDotNet.Buffers.CLImageFormat,OpenCLDotNet.Core.CL_ERROR@)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="format"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.AddImageFormat(OpenCLDotNet.Buffers.CLImageFormatKey,OpenCLDotNet.Buffers.CLImageFormat[]@)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="formats"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetImageInfoSize(OpenCLDotNet.Core.cl_mem,OpenCLDotNet.Core.CL_IMAGE_INFO,System.UInt32@)">
            <summary>
            
            </summary>
            <param name="image"></param>
            <param name="name"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetImageInfo(OpenCLDotNet.Core.cl_mem,OpenCLDotNet.Core.CL_IMAGE_INFO,OpenCLDotNet.Core.size_t,System.UInt64@)">
            <summary>
            
            </summary>
            <param name="image"></param>
            <param name="name"></param>
            <param name="size"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetImageInfo(OpenCLDotNet.Core.cl_mem,OpenCLDotNet.Core.CL_IMAGE_INFO,OpenCLDotNet.Core.size_t,OpenCLDotNet.Buffers.CLImageFormat@)">
            <summary>
            
            </summary>
            <param name="image"></param>
            <param name="name"></param>
            <param name="size"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.CreateSamplerWithProperties(OpenCLDotNet.Core.cl_context,OpenCLDotNet.Buffers.CLSamplerProperties,OpenCLDotNet.Core.CL_ERROR@)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="properties"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetSamplerInfoSize(OpenCLDotNet.Core.cl_sampler,OpenCLDotNet.Core.CL_SAMPLER_INFO,System.UInt32@)">
            <summary>
            
            </summary>
            <param name="sampler"></param>
            <param name="name"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetSamplerInfo(OpenCLDotNet.Core.cl_sampler,OpenCLDotNet.Core.CL_SAMPLER_INFO,System.UInt32,System.UInt64@)">
            <summary>
            
            </summary>
            <param name="sampler"></param>
            <param name="name"></param>
            <param name="size"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetSamplerInfo(OpenCLDotNet.Core.cl_sampler,OpenCLDotNet.Core.CL_SAMPLER_INFO,System.UInt32,System.Single@)">
            <summary>
            
            </summary>
            <param name="sampler"></param>
            <param name="name"></param>
            <param name="size"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetSamplerInfo(OpenCLDotNet.Core.cl_sampler,OpenCLDotNet.Core.CL_SAMPLER_INFO,System.UInt32,OpenCLDotNet.Core.cl_object@)">
            <summary>
            
            </summary>
            <param name="sampler"></param>
            <param name="name"></param>
            <param name="size"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetSamplerInfo(OpenCLDotNet.Core.cl_sampler,OpenCLDotNet.Core.CL_SAMPLER_INFO,System.UInt32,OpenCLDotNet.Core.cl_object[])">
            <summary>
            
            </summary>
            <param name="sampler"></param>
            <param name="name"></param>
            <param name="size"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.RetainSampler(OpenCLDotNet.Core.cl_sampler)">
            <summary>
            
            </summary>
            <param name="sampler"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.ReleaseSampler(OpenCLDotNet.Core.cl_sampler)">
            <summary>
            
            </summary>
            <param name="sampler"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.CreateContext(OpenCLDotNet.Core.cl_platform_id,System.UInt32,OpenCLDotNet.Core.cl_device_id[])">
            <summary>
            
            </summary>
            <param name="platform"></param>
            <param name="num_devices"></param>
            <param name="devices"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetContextInfoSize(OpenCLDotNet.Core.cl_context,OpenCLDotNet.Core.CL_CONTEXT_INFO,System.UInt32@)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="name"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetContextInfo(OpenCLDotNet.Core.cl_context,OpenCLDotNet.Core.CL_CONTEXT_INFO,System.UInt32,OpenCLDotNet.Core.cl_object[])">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="name"></param>
            <param name="size"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetContextInfo(OpenCLDotNet.Core.cl_context,OpenCLDotNet.Core.CL_CONTEXT_INFO,System.UInt32,System.UInt64@)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="name"></param>
            <param name="size"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.RetainContext(OpenCLDotNet.Core.cl_context)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.ReleaseContext(OpenCLDotNet.Core.cl_context)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:OpenCLDotNet.Core.CL.DLL_NAME">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Core.CL.CDECL">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Core.CL.MAX_FLOAT">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Core.CL.MIN_FLOAT">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Core.CL.EPSILON">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CL.Version">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetDeviceCount(OpenCLDotNet.Core.cl_platform_id,OpenCLDotNet.Core.CL_DEVICE_TYPE,System.UInt32@)">
            <summary>
            
            </summary>
            <param name="platform"></param>
            <param name="device_type"></param>
            <param name="num_devices"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetDeviceIDs(OpenCLDotNet.Core.cl_platform_id,OpenCLDotNet.Core.CL_DEVICE_TYPE,System.UInt32,OpenCLDotNet.Core.cl_device_id[])">
            <summary>
            
            </summary>
            <param name="platform"></param>
            <param name="device_type"></param>
            <param name="num_devices"></param>
            <param name="devices"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetDeviceIDs(OpenCLDotNet.Core.cl_platform_id,OpenCLDotNet.Core.CL_DEVICE_TYPE,System.Collections.Generic.List{OpenCLDotNet.Core.cl_device_id})">
            <summary>
            
            </summary>
            <param name="platform"></param>
            <param name="device_type"></param>
            <param name="device_ids"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetDeviceInfoSize(OpenCLDotNet.Core.cl_device_id,OpenCLDotNet.Core.CL_DEVICE_INFO,System.UInt32@)">
            <summary>
            
            </summary>
            <param name="device"></param>
            <param name="name"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetDeviceInfo(OpenCLDotNet.Core.cl_device_id,OpenCLDotNet.Core.CL_DEVICE_INFO,System.UInt32,System.UInt64@)">
            <summary>
            
            </summary>
            <param name="device"></param>
            <param name="name"></param>
            <param name="info_size"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetDeviceInfo(OpenCLDotNet.Core.cl_device_id,OpenCLDotNet.Core.CL_DEVICE_INFO,System.UInt32,OpenCLDotNet.Core.cl_char[])">
            <summary>
            
            </summary>
            <param name="device"></param>
            <param name="name"></param>
            <param name="info_size"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetDeviceInfo(OpenCLDotNet.Core.cl_device_id,OpenCLDotNet.Core.CL_DEVICE_INFO,System.UInt32,OpenCLDotNet.Core.size_t[])">
            <summary>
            
            </summary>
            <param name="device"></param>
            <param name="name"></param>
            <param name="info_size"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetDeviceInfo(OpenCLDotNet.Core.cl_device_id,OpenCLDotNet.Core.CL_DEVICE_INFO,System.UInt32,OpenCLDotNet.Core.cl_object@)">
            <summary>
            
            </summary>
            <param name="device"></param>
            <param name="name"></param>
            <param name="info_size"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetDeviceInfo(OpenCLDotNet.Core.cl_device_id,OpenCLDotNet.Core.CL_DEVICE_INFO,System.UInt32,OpenCLDotNet.Core.cl_object[])">
            <summary>
            
            </summary>
            <param name="device"></param>
            <param name="name"></param>
            <param name="info_size"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.RetainDevice(OpenCLDotNet.Core.cl_device_id)">
            <summary>
            
            </summary>
            <param name="device"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.ReleaseDevice(OpenCLDotNet.Core.cl_device_id)">
            <summary>
            
            </summary>
            <param name="device"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetPlatformCount(System.UInt32@)">
            <summary>
            
            </summary>
            <param name="num_platforms"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetPlatformIDs(System.UInt32,OpenCLDotNet.Core.cl_platform_id[])">
            <summary>
            
            </summary>
            <param name="num_entries"></param>
            <param name="platform_ids"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetPlatformIDs(System.Collections.Generic.List{OpenCLDotNet.Core.cl_platform_id})">
            <summary>
            
            </summary>
            <param name="platform_ids"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetPlatformInfoSize(OpenCLDotNet.Core.cl_platform_id,OpenCLDotNet.Core.CL_PLATFORM_INFO,System.UInt32@)">
            <summary>
            
            </summary>
            <param name="platform"></param>
            <param name="name"></param>
            <param name="info_size"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetPlatformInfo(OpenCLDotNet.Core.cl_platform_id,OpenCLDotNet.Core.CL_PLATFORM_INFO,System.UInt32,OpenCLDotNet.Core.cl_char[])">
            <summary>
            
            </summary>
            <param name="platform"></param>
            <param name="name"></param>
            <param name="info_size"></param>
            <param name="info_array"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetPlatformInfo(OpenCLDotNet.Core.cl_platform_id,OpenCLDotNet.Core.CL_PLATFORM_INFO,System.String@)">
            <summary>
            
            </summary>
            <param name="platform"></param>
            <param name="name"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.CreateCommandQueue(OpenCLDotNet.Core.cl_context,OpenCLDotNet.Core.cl_device_id,OpenCLDotNet.Core.CL_ERROR@)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="device"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.CreateCommandQueueWithProperties(OpenCLDotNet.Core.cl_context,OpenCLDotNet.Core.cl_device_id,OpenCLDotNet.Events.CLCommandQueueProperties,OpenCLDotNet.Core.CL_ERROR@)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="device"></param>
            <param name="properties"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetCommandQueueInfoSize(OpenCLDotNet.Core.cl_command_queue,OpenCLDotNet.Core.CL_COMMAND_QUEUE_INFO,System.UInt32@)">
            <summary>
            
            </summary>
            <param name="command"></param>
            <param name="name"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetCommandQueueInfo(OpenCLDotNet.Core.cl_command_queue,OpenCLDotNet.Core.CL_COMMAND_QUEUE_INFO,System.UInt32,System.UInt64@)">
            <summary>
            
            </summary>
            <param name="command"></param>
            <param name="name"></param>
            <param name="size"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetCommandQueueInfo(OpenCLDotNet.Core.cl_command_queue,OpenCLDotNet.Core.CL_COMMAND_QUEUE_INFO,System.UInt32,OpenCLDotNet.Core.cl_object@)">
            <summary>
            
            </summary>
            <param name="command"></param>
            <param name="name"></param>
            <param name="size"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetCommandQueueInfo(OpenCLDotNet.Core.cl_command_queue,OpenCLDotNet.Core.CL_COMMAND_QUEUE_INFO,System.UInt32,OpenCLDotNet.Core.cl_object[])">
            <summary>
            
            </summary>
            <param name="command"></param>
            <param name="name"></param>
            <param name="size"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.RetainCommandQueue(OpenCLDotNet.Core.cl_command_queue)">
            <summary>
            
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.ReleaseCommandQueue(OpenCLDotNet.Core.cl_command_queue)">
            <summary>
            
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.Flush(OpenCLDotNet.Core.cl_command_queue)">
            <summary>
            
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.Finish(OpenCLDotNet.Core.cl_command_queue)">
            <summary>
            
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.CreateKernel(OpenCLDotNet.Core.cl_program,OpenCLDotNet.Core.cl_char[],OpenCLDotNet.Core.CL_ERROR@)">
            <summary>
            
            </summary>
            <param name="program"></param>
            <param name="kernel_name"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.SetKernelArg(OpenCLDotNet.Core.cl_kernel,System.UInt32,OpenCLDotNet.Core.cl_mem)">
            <summary>
            
            </summary>
            <param name="kernel"></param>
            <param name="arg_index"></param>
            <param name="arg_value"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.SetKernelArg(OpenCLDotNet.Core.cl_kernel,System.UInt32,OpenCLDotNet.Core.cl_sampler)">
            <summary>
            
            </summary>
            <param name="kernel"></param>
            <param name="arg_index"></param>
            <param name="arg_value"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.SetKernelArg(OpenCLDotNet.Core.cl_kernel,System.UInt32,System.Double)">
            <summary>
            
            </summary>
            <param name="kernel"></param>
            <param name="arg_index"></param>
            <param name="arg_value"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.SetKernelArg(OpenCLDotNet.Core.cl_kernel,System.UInt32,System.Single)">
            <summary>
            
            </summary>
            <param name="kernel"></param>
            <param name="arg_index"></param>
            <param name="arg_value"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.SetKernelArg(OpenCLDotNet.Core.cl_kernel,System.UInt32,System.Int64)">
            <summary>
            
            </summary>
            <param name="kernel"></param>
            <param name="arg_index"></param>
            <param name="arg_value"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.SetKernelArg(OpenCLDotNet.Core.cl_kernel,System.UInt32,System.UInt64)">
            <summary>
            
            </summary>
            <param name="kernel"></param>
            <param name="arg_index"></param>
            <param name="arg_value"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.SetKernelArg(OpenCLDotNet.Core.cl_kernel,System.UInt32,System.Int32)">
            <summary>
            
            </summary>
            <param name="kernel"></param>
            <param name="arg_index"></param>
            <param name="arg_value"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.SetKernelArg(OpenCLDotNet.Core.cl_kernel,System.UInt32,System.UInt32)">
            <summary>
            
            </summary>
            <param name="kernel"></param>
            <param name="arg_index"></param>
            <param name="arg_value"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.SetKernelArg(OpenCLDotNet.Core.cl_kernel,System.UInt32,System.Int16)">
            <summary>
            
            </summary>
            <param name="kernel"></param>
            <param name="arg_index"></param>
            <param name="arg_value"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.SetKernelArg(OpenCLDotNet.Core.cl_kernel,System.UInt32,System.UInt16)">
            <summary>
            
            </summary>
            <param name="kernel"></param>
            <param name="arg_index"></param>
            <param name="arg_value"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.SetKernelArg(OpenCLDotNet.Core.cl_kernel,System.UInt32,System.SByte)">
            <summary>
            
            </summary>
            <param name="kernel"></param>
            <param name="arg_index"></param>
            <param name="arg_value"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.SetKernelArg(OpenCLDotNet.Core.cl_kernel,System.UInt32,System.Byte)">
            <summary>
            
            </summary>
            <param name="kernel"></param>
            <param name="arg_index"></param>
            <param name="arg_value"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetKernelInfoSize(OpenCLDotNet.Core.cl_kernel,OpenCLDotNet.Core.CL_KERNEL_INFO,System.UInt32@)">
            <summary>
            
            </summary>
            <param name="kernel"></param>
            <param name="name"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetKernelInfo(OpenCLDotNet.Core.cl_kernel,OpenCLDotNet.Core.CL_KERNEL_INFO,System.UInt32,System.UInt64@)">
            <summary>
            
            </summary>
            <param name="kernel"></param>
            <param name="name"></param>
            <param name="size"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetKernelInfo(OpenCLDotNet.Core.cl_kernel,OpenCLDotNet.Core.CL_KERNEL_INFO,System.UInt32,OpenCLDotNet.Core.cl_object@)">
            <summary>
            
            </summary>
            <param name="kernel"></param>
            <param name="name"></param>
            <param name="size"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetKernelInfo(OpenCLDotNet.Core.cl_kernel,OpenCLDotNet.Core.CL_KERNEL_INFO,System.UInt32,OpenCLDotNet.Core.cl_char[])">
            <summary>
            
            </summary>
            <param name="kernel"></param>
            <param name="name"></param>
            <param name="size"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetKernelArgInfoSize(OpenCLDotNet.Core.cl_kernel,System.UInt32,OpenCLDotNet.Core.CL_KERNEL_ARG_INFO,System.UInt32@)">
            <summary>
            
            </summary>
            <param name="kernel"></param>
            <param name="index"></param>
            <param name="name"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetKernelArgInfo(OpenCLDotNet.Core.cl_kernel,System.UInt32,OpenCLDotNet.Core.CL_KERNEL_ARG_INFO,System.UInt32,System.UInt64@)">
            <summary>
            
            </summary>
            <param name="kernel"></param>
            <param name="index"></param>
            <param name="name"></param>
            <param name="size"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetKernelArgInfo(OpenCLDotNet.Core.cl_kernel,System.UInt32,OpenCLDotNet.Core.CL_KERNEL_ARG_INFO,System.UInt32,OpenCLDotNet.Core.cl_object@)">
            <summary>
            
            </summary>
            <param name="kernel"></param>
            <param name="index"></param>
            <param name="name"></param>
            <param name="size"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetKernelArgInfo(OpenCLDotNet.Core.cl_kernel,System.UInt32,OpenCLDotNet.Core.CL_KERNEL_ARG_INFO,System.UInt32,OpenCLDotNet.Core.cl_char[])">
            <summary>
            
            </summary>
            <param name="kernel"></param>
            <param name="index"></param>
            <param name="name"></param>
            <param name="size"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetKernelWorkGroupInfoSize(OpenCLDotNet.Core.cl_kernel,OpenCLDotNet.Core.cl_device_id,OpenCLDotNet.Core.CL_KERNEL_WORK_GROUP_INFO,System.UInt32@)">
            <summary>
            
            </summary>
            <param name="kernel"></param>
            <param name="device"></param>
            <param name="name"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetKernelWorkGroupInfo(OpenCLDotNet.Core.cl_kernel,OpenCLDotNet.Core.cl_device_id,OpenCLDotNet.Core.CL_KERNEL_WORK_GROUP_INFO,System.UInt32,System.UInt64@)">
            <summary>
            
            </summary>
            <param name="kernel"></param>
            <param name="device"></param>
            <param name="name"></param>
            <param name="size"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetKernelWorkGroupInfo(OpenCLDotNet.Core.cl_kernel,OpenCLDotNet.Core.cl_device_id,OpenCLDotNet.Core.CL_KERNEL_WORK_GROUP_INFO,System.UInt32,OpenCLDotNet.Core.size_t[])">
            <summary>
            
            </summary>
            <param name="kernel"></param>
            <param name="device"></param>
            <param name="name"></param>
            <param name="size"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.RetainKernel(OpenCLDotNet.Core.cl_kernel)">
            <summary>
            
            </summary>
            <param name="kernel"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.ReleaseKernel(OpenCLDotNet.Core.cl_kernel)">
            <summary>
            
            </summary>
            <param name="kernel"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.CreateProgramWithSource(OpenCLDotNet.Core.cl_context,System.String,OpenCLDotNet.Core.CL_ERROR@)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="program_text"></param>
            <param name="error_code"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.CreateProgramWithBinary(OpenCLDotNet.Core.cl_context,OpenCLDotNet.Core.cl_uint,OpenCLDotNet.Core.cl_device_id[],OpenCLDotNet.Core.size_t[],System.Byte[],OpenCLDotNet.Core.CL_ERROR[],OpenCLDotNet.Core.CL_ERROR@)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="num_devices"></param>
            <param name="device_list"></param>
            <param name="lengths"></param>
            <param name="binaries"></param>
            <param name="binary_status"></param>
            <param name="errcode"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.BuildProgram(OpenCLDotNet.Core.cl_program,System.UInt32,OpenCLDotNet.Core.cl_device_id[],System.String)">
            <summary>
            
            </summary>
            <param name="program"></param>
            <param name="num_devices"></param>
            <param name="device_list"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetProgramBuildInfoSize(OpenCLDotNet.Core.cl_program,OpenCLDotNet.Core.cl_device_id,OpenCLDotNet.Core.CL_PROGRAM_BUILD_INFO,System.UInt32@)">
            <summary>
            
            </summary>
            <param name="program"></param>
            <param name="device"></param>
            <param name="name"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetProgramBuildInfo(OpenCLDotNet.Core.cl_program,OpenCLDotNet.Core.cl_device_id,OpenCLDotNet.Core.CL_PROGRAM_BUILD_INFO,System.UInt32,System.UInt64@)">
            <summary>
            
            </summary>
            <param name="program"></param>
            <param name="device"></param>
            <param name="name"></param>
            <param name="size"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetProgramBuildInfo(OpenCLDotNet.Core.cl_program,OpenCLDotNet.Core.cl_device_id,OpenCLDotNet.Core.CL_PROGRAM_BUILD_INFO,System.UInt32,OpenCLDotNet.Core.cl_char[])">
            <summary>
            
            </summary>
            <param name="program"></param>
            <param name="device"></param>
            <param name="name"></param>
            <param name="size"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetProgramInfoSize(OpenCLDotNet.Core.cl_program,OpenCLDotNet.Core.CL_PROGRAM_INFO,System.UInt32@)">
            <summary>
            
            </summary>
            <param name="program"></param>
            <param name="name"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetProgramInfo(OpenCLDotNet.Core.cl_program,OpenCLDotNet.Core.CL_PROGRAM_INFO,System.UInt32,System.UInt64@)">
            <summary>
            
            </summary>
            <param name="program"></param>
            <param name="name"></param>
            <param name="size"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetProgramInfo(OpenCLDotNet.Core.cl_program,OpenCLDotNet.Core.CL_PROGRAM_INFO,System.UInt32,OpenCLDotNet.Core.cl_char[])">
            <summary>
            
            </summary>
            <param name="program"></param>
            <param name="name"></param>
            <param name="size"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetProgramInfo(OpenCLDotNet.Core.cl_program,OpenCLDotNet.Core.CL_PROGRAM_INFO,System.UInt32,OpenCLDotNet.Core.cl_object@)">
            <summary>
            
            </summary>
            <param name="program"></param>
            <param name="name"></param>
            <param name="size"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetProgramInfo(OpenCLDotNet.Core.cl_program,OpenCLDotNet.Core.CL_PROGRAM_INFO,System.UInt32,OpenCLDotNet.Core.cl_object[])">
            <summary>
            
            </summary>
            <param name="program"></param>
            <param name="name"></param>
            <param name="size"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetProgramInfo(OpenCLDotNet.Core.cl_program,OpenCLDotNet.Core.CL_PROGRAM_INFO,System.UInt32,OpenCLDotNet.Core.size_t[])">
            <summary>
            
            </summary>
            <param name="program"></param>
            <param name="name"></param>
            <param name="size"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetProgramBinaries(OpenCLDotNet.Core.cl_program,System.Int32,OpenCLDotNet.Core.size_t[],System.Byte[])">
            <summary>
            
            </summary>
            <param name="program"></param>
            <param name="num_devices"></param>
            <param name="sizes"></param>
            <param name="binaries"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.RetainProgram(OpenCLDotNet.Core.cl_program)">
            <summary>
            
            </summary>
            <param name="program"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.ReleaseProgram(OpenCLDotNet.Core.cl_program)">
            <summary>
            
            </summary>
            <param name="program"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CL.GetValues``1(System.Boolean)">
            <summary>
            Get all the enums values, sort and return in a list.
            TODO - must be better way of doing this.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sort"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CLColorRGBA.op_Addition(OpenCLDotNet.Core.CLColorRGBA,OpenCLDotNet.Core.CLColorRGBA)">
            <summary>
            Add two colors.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLColorRGBA.op_Addition(OpenCLDotNet.Core.CLColorRGBA,System.Single)">
            <summary>
            Add color and scalar.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLColorRGBA.op_Addition(System.Single,OpenCLDotNet.Core.CLColorRGBA)">
            <summary>
            Add color and scalar.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLColorRGBA.op_Subtraction(OpenCLDotNet.Core.CLColorRGBA,OpenCLDotNet.Core.CLColorRGBA)">
            <summary>
            Subtract two colors.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLColorRGBA.op_Subtraction(OpenCLDotNet.Core.CLColorRGBA,System.Single)">
            <summary>
            Subtract color and scalar.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLColorRGBA.op_Subtraction(System.Single,OpenCLDotNet.Core.CLColorRGBA)">
            <summary>
            Subtract color and scalar.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLColorRGBA.op_Multiply(OpenCLDotNet.Core.CLColorRGBA,OpenCLDotNet.Core.CLColorRGBA)">
            <summary>
            Multiply two colors.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLColorRGBA.op_Multiply(OpenCLDotNet.Core.CLColorRGBA,System.Single)">
            <summary>
            Multiply a color and a scalar.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLColorRGBA.op_Multiply(System.Single,OpenCLDotNet.Core.CLColorRGBA)">
            <summary>
            Multiply a color and a scalar.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLColorRGBA.op_Division(OpenCLDotNet.Core.CLColorRGBA,OpenCLDotNet.Core.CLColorRGBA)">
            <summary>
            Divide two colors.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLColorRGBA.op_Division(OpenCLDotNet.Core.CLColorRGBA,System.Single)">
            <summary>
            Divide a color and a scalar.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLColorRGBA.ToString">
            <summary>
            color as a string.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLColorRGBA.ToString(System.String)">
            <summary>
            color as a string.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLColorRGBA.FromBytes(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            color from bytes.
            The values will be converted from a 0-255 range to a 0-1 range.
            </summary>
            <returns>A color will values in the 0-1 range.</returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CLColorRGBA.ToBytes(System.Byte[],System.Int32)">
            <summary>
            Scale and clamp each channel to 0-255 range 
            and copy into byte array.
            </summary>
            <param name="bytes">The bytes.</param>
            <param name="offset">Optional offset into byte array.</param>
        </member>
        <member name="M:OpenCLDotNet.Core.CLColorRGBA.ToInteger(System.Boolean)">
            <summary>
            Convert the color to a integer where each byte 
            represents a channel in the color.
            </summary>
            <param name="abgr">are the channels packed bgr or rgb.</param>
            <returns>A integer where each byte represents a channel in the color.</returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CLColorRGBA.Gamma(System.Single,System.Single)">
            <summary>
            Apply the gamma function to the color.
            Gamma is not applied to the alpha channel.
            </summary>
            <param name="lambda">The power to raise each channel to.</param>
            <param name="A">The constant the result is multiplied by. Defaults to 1.</param>
        </member>
        <member name="M:OpenCLDotNet.Core.CLColorRGBA.Distance(OpenCLDotNet.Core.CLColorRGBA,OpenCLDotNet.Core.CLColorRGBA)">
            <summary>
            The distance between two colors.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLColorRGBA.SqrDistance(OpenCLDotNet.Core.CLColorRGBA,OpenCLDotNet.Core.CLColorRGBA)">
            <summary>
            The square distance between two colors.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLColorRGBA.Min(OpenCLDotNet.Core.CLColorRGBA,System.Single)">
            <summary>
            The minimum value between s and each component in vector.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLColorRGBA.Max(OpenCLDotNet.Core.CLColorRGBA,System.Single)">
            <summary>
            The maximum value between s and each component in vector.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLColorRGBA.Clamp(OpenCLDotNet.Core.CLColorRGBA,System.Single,System.Single)">
            <summary>
            Clamp the each component to specified min and max.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLColorRGBA.Permutate(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Create a new color by reordering the componets.
            </summary>
            <param name="i">The index to take x value from.></param>
            <param name="j">The index to take y value from.</param>
            <param name="k">The index to take z value from.</param>
            <param name="l">The index to take z value from.</param>
            <returns>The new color.</returns>
        </member>
        <member name="T:OpenCLDotNet.Core.CLContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLContext.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLContext.#ctor(OpenCLDotNet.Core.CL_DEVICE_TYPE)">
            <summary>
            
            </summary>
            <param name="device_type"></param>
        </member>
        <member name="P:OpenCLDotNet.Core.CLContext.IsValid">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLContext.NumDevices">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLContext.NumPlatforms">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLContext.Platform">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLContext.Platforms">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLContext.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CLContext.GetDeviceIds">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CLContext.GetDeviceID(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CLContext.HasDevice(OpenCLDotNet.Core.CL_DEVICE_TYPE)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CLContext.Print(System.Text.StringBuilder)">
            <summary>
            
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:OpenCLDotNet.Core.CLContext.GetInfo(OpenCLDotNet.Core.CL_CONTEXT_INFO)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CLContext.GetInfoUInt64(OpenCLDotNet.Core.CL_CONTEXT_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CLContext.GetInfoObjectArray(OpenCLDotNet.Core.CL_CONTEXT_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CLContext.CreatePlatforms(OpenCLDotNet.Core.CL_DEVICE_TYPE)">
            <summary>
            
            </summary>
            <param name="device_type"></param>
        </member>
        <member name="M:OpenCLDotNet.Core.CLContext.CreateContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLContext.Release">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLContext.CheckContext">
            <summary>
            
            </summary>
            <exception cref="T:OpenCLDotNet.Utility.InvalidObjectExeception"></exception>
            <exception cref="T:System.NullReferenceException"></exception>
        </member>
        <member name="T:OpenCLDotNet.Core.CLDevice">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLDevice.#ctor(OpenCLDotNet.Core.cl_device_id,OpenCLDotNet.Core.CLPlatform)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="platform"></param>
        </member>
        <member name="P:OpenCLDotNet.Core.CLDevice.Platform">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLDevice.Vendor">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLDevice.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLDevice.Version">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLDevice.Profile">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLDevice.DeviceType">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLDevice.SupportsImages">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLDevice.SupportsFP64">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLDevice.IsGPU">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLDevice.IsCPU">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLDevice.Extensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLDevice.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CLDevice.HasExtension(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CLDevice.Print(System.Text.StringBuilder)">
            <summary>
            
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:OpenCLDotNet.Core.CLDevice.GetInfo(OpenCLDotNet.Core.CL_DEVICE_INFO)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CLDevice.GetInfoString(OpenCLDotNet.Core.CL_DEVICE_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CLDevice.GetInfoObject(OpenCLDotNet.Core.CL_DEVICE_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CLDevice.GetInfoBool(OpenCLDotNet.Core.CL_DEVICE_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CLDevice.GetInfoUInt64(OpenCLDotNet.Core.CL_DEVICE_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CLDevice.GetInfoSizetArray(OpenCLDotNet.Core.CL_DEVICE_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CLDevice.GetInfoObjectArray(OpenCLDotNet.Core.CL_DEVICE_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CLDevice.GetInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLDevice.GetExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLDevice.Release">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCLDotNet.Core.CLObject">
            <summary>
            Base class for objects that referrence a CL object.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLObject.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLObject.Finalize">
            <summary>
            The destuctor.
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLObject.Id">
            <summary>
            The objects OpenCL id.
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLObject.IsDisposed">
            <summary>
            Has the object been disposed.
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLObject.IsValid">
            <summary>
            Is the object in a valid state to use.
            </summary>
            <returns>Is the object in a valid state to use.</returns>
        </member>
        <member name="P:OpenCLDotNet.Core.CLObject.Error">
            <summary>
            The last error code that occured.
            Will be NONE if never used.
            Will be SUCCUSS if last operation to run was successful.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLObject.Dispose">
            <summary>
            Dispose the CL object.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLObject.ResetErrorCode">
            <summary>
            Resets the error code to the value used when 
            nothing has been ran the generates a error.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLObject.SetErrorCodeToSuccess">
            <summary>
            Sets the error code to SUCCESS.
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLObject.HasError">
            <summary>
            If error code not default value or success.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLObject.ToString">
            <summary>
            Print some information about the object.
            </summary>
            <returns>Print some information about the object.</returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CLObject.Print">
            <summary>
            Print the object into the console.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLObject.Print(System.Text.StringBuilder)">
            <summary>
            Print the object into a string builder.
            </summary>
            <param name="builder">The builder to print into.</param>
        </member>
        <member name="M:OpenCLDotNet.Core.CLObject.ReleaseInternal">
            <summary>
            Release the CGAL object.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLObject.Release">
            <summary>
            Allow derived class to release the unmanaged memory.
            </summary>
        </member>
        <member name="T:OpenCLDotNet.Core.CLPlatform">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPlatform.#ctor(OpenCLDotNet.Core.cl_platform_id)">
            <summary>
            
            </summary>
            <param name="id"></param>
        </member>
        <member name="P:OpenCLDotNet.Core.CLPlatform.Vendor">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLPlatform.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLPlatform.Version">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLPlatform.Profile">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLPlatform.Extensions">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLPlatform.NumDevices">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLPlatform.Devices">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPlatform.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPlatform.GetDeviceID(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPlatform.GetDeviceIds">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPlatform.HasDevice(OpenCLDotNet.Core.CL_DEVICE_TYPE)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPlatform.DeviceSupportsImages(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPlatform.SupportsImages">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPlatform.HasExtension(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPlatform.UnloadComplier">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPlatform.Print(System.Text.StringBuilder)">
            <summary>
            
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPlatform.GetInfo(OpenCLDotNet.Core.CL_PLATFORM_INFO)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPlatform.GetInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPlatform.GetInfoString(OpenCLDotNet.Core.CL_PLATFORM_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPlatform.CreateDevices">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPlatform.GetExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Core.CLPoint2t.Dimension">
            <summary>
            The dimension is the number components in the point.
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Core.CLPoint2t.UnitX">
            <summary>
            The unit x point.
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Core.CLPoint2t.UnitY">
            <summary>
            The unit y point.
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Core.CLPoint2t.Zero">
            <summary>
            A point of zeros.
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Core.CLPoint2t.One">
            <summary>
            A point of ones.
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Core.CLPoint2t.MaxValue">
            <summary>
            A point of max value.
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Core.CLPoint2t.MinValue">
            <summary>
            A point of min value.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint2t.#ctor(OpenCLDotNet.Core.size_t)">
            <summary>
            A point all with the value v.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint2t.#ctor(OpenCLDotNet.Core.size_t,OpenCLDotNet.Core.size_t)">
            <summary>
            A point from the varibles.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint2t.#ctor(System.Double,System.Double)">
            <summary>
            A point from the varibles.
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLPoint2t.Item(System.Int32)">
            <summary>
            Array accessor for variables. 
            </summary>
            <param name="i">The variables index.</param>
            <returns>The variable value</returns>
        </member>
        <member name="P:OpenCLDotNet.Core.CLPoint2t.Sum">
            <summary>
            The sum of the points components.
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLPoint2t.Product">
            <summary>
            The product of the points components.
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLPoint2t.Magnitude">
            <summary>
            The length of the point.
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLPoint2t.SqrMagnitude">
            <summary>
            The length of the point squared.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint2t.op_Addition(OpenCLDotNet.Core.CLPoint2t,OpenCLDotNet.Core.CLPoint2t)">
            <summary>
            Add two points.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint2t.op_Addition(OpenCLDotNet.Core.CLPoint2t,OpenCLDotNet.Core.size_t)">
            <summary>
            Add point and scalar.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint2t.op_Addition(OpenCLDotNet.Core.size_t,OpenCLDotNet.Core.CLPoint2t)">
            <summary>
            Add point and scalar.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint2t.op_Subtraction(OpenCLDotNet.Core.CLPoint2t,OpenCLDotNet.Core.CLPoint2t)">
            <summary>
            Subtract two points.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint2t.op_Subtraction(OpenCLDotNet.Core.CLPoint2t,OpenCLDotNet.Core.size_t)">
            <summary>
            Subtract point and scalar.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint2t.op_Subtraction(OpenCLDotNet.Core.size_t,OpenCLDotNet.Core.CLPoint2t)">
            <summary>
            Subtract point and scalar.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint2t.op_Multiply(OpenCLDotNet.Core.CLPoint2t,OpenCLDotNet.Core.CLPoint2t)">
            <summary>
            Multiply two points.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint2t.op_Multiply(OpenCLDotNet.Core.CLPoint2t,OpenCLDotNet.Core.size_t)">
            <summary>
            Multiply a point and a scalar.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint2t.op_Multiply(OpenCLDotNet.Core.size_t,OpenCLDotNet.Core.CLPoint2t)">
            <summary>
            Multiply a point and a scalar.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint2t.op_Division(OpenCLDotNet.Core.CLPoint2t,OpenCLDotNet.Core.CLPoint2t)">
            <summary>
            Divide two points.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint2t.op_Division(OpenCLDotNet.Core.CLPoint2t,OpenCLDotNet.Core.size_t)">
            <summary>
            Divide a point and a scalar.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint2t.op_Division(OpenCLDotNet.Core.size_t,OpenCLDotNet.Core.CLPoint2t)">
            <summary>
            Divide a scalar and a point.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint2t.ToString">
            <summary>
            Vector as a string.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint2t.Distance(OpenCLDotNet.Core.CLPoint2t,OpenCLDotNet.Core.CLPoint2t)">
            <summary>
            Distance between two points.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint2t.SqrDistance(OpenCLDotNet.Core.CLPoint2t,OpenCLDotNet.Core.CLPoint2t)">
            <summary>
            Square distance between two points.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint2t.Min(OpenCLDotNet.Core.CLPoint2t,OpenCLDotNet.Core.size_t)">
            <summary>
            The minimum value between s and each component in point.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint2t.Min(OpenCLDotNet.Core.CLPoint2t,OpenCLDotNet.Core.CLPoint2t)">
            <summary>
            The minimum value between each component in points.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint2t.Max(OpenCLDotNet.Core.CLPoint2t,OpenCLDotNet.Core.size_t)">
            <summary>
            The maximum value between s and each component in point.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint2t.Max(OpenCLDotNet.Core.CLPoint2t,OpenCLDotNet.Core.CLPoint2t)">
            <summary>
            The maximum value between each component in points.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint2t.Clamp(OpenCLDotNet.Core.CLPoint2t,OpenCLDotNet.Core.size_t,OpenCLDotNet.Core.size_t)">
            <summary>
            Clamp each component to specified min and max.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint2t.Clamp(OpenCLDotNet.Core.CLPoint2t,OpenCLDotNet.Core.CLPoint2t,OpenCLDotNet.Core.CLPoint2t)">
            <summary>
            Clamp each component to specified min and max.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint2t.Permutate(System.Int32,System.Int32)">
            <summary>
            Create a new point by reordering the componets.
            </summary>
            <param name="i">The index to take x value from.></param>
            <param name="j">The index to take y value from.</param>
            <returns>The new vector</returns>
        </member>
        <member name="F:OpenCLDotNet.Core.CLPoint3t.Dimension">
            <summary>
            The dimension is the number components in the point.
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Core.CLPoint3t.UnitX">
            <summary>
            The unit x point.
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Core.CLPoint3t.UnitY">
            <summary>
            The unit y point.
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Core.CLPoint3t.UnitZ">
            <summary>
            The unit z point.
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Core.CLPoint3t.Zero">
            <summary>
            A point of zeros.
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Core.CLPoint3t.One">
            <summary>
            A point of ones.
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Core.CLPoint3t.MaxValue">
            <summary>
            A point of max value.
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Core.CLPoint3t.MinValue">
            <summary>
            A point of min value.
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLPoint3t.xzy">
            <summary>
            3D point to 3D swizzle point.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint3t.#ctor(OpenCLDotNet.Core.size_t)">
            <summary>
            A point all with the value v.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint3t.#ctor(OpenCLDotNet.Core.size_t,OpenCLDotNet.Core.size_t,OpenCLDotNet.Core.size_t)">
            <summary>
            A point from the varibles.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint3t.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            A point from the varibles.
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLPoint3t.Item(System.Int32)">
            <summary>
            Array accessor for variables. 
            </summary>
            <param name="i">The variables index.</param>
            <returns>The variable value</returns>
        </member>
        <member name="P:OpenCLDotNet.Core.CLPoint3t.Sum">
            <summary>
            The sum of the points components.
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLPoint3t.Product">
            <summary>
            The product of the points components.
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLPoint3t.Magnitude">
            <summary>
            The length of the point.
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLPoint3t.SqrMagnitude">
            <summary>
            The length of the point squared.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint3t.op_Addition(OpenCLDotNet.Core.CLPoint3t,OpenCLDotNet.Core.CLPoint3t)">
            <summary>
            Add two points.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint3t.op_Addition(OpenCLDotNet.Core.CLPoint3t,OpenCLDotNet.Core.size_t)">
            <summary>
            Add point and scalar.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint3t.op_Addition(OpenCLDotNet.Core.size_t,OpenCLDotNet.Core.CLPoint3t)">
            <summary>
            Add point and scalar.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint3t.op_Subtraction(OpenCLDotNet.Core.CLPoint3t,OpenCLDotNet.Core.CLPoint3t)">
            <summary>
            Subtract two points.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint3t.op_Subtraction(OpenCLDotNet.Core.CLPoint3t,OpenCLDotNet.Core.size_t)">
            <summary>
            Subtract point and scalar.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint3t.op_Subtraction(OpenCLDotNet.Core.size_t,OpenCLDotNet.Core.CLPoint3t)">
            <summary>
            Subtract point and scalar.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint3t.op_Multiply(OpenCLDotNet.Core.CLPoint3t,OpenCLDotNet.Core.CLPoint3t)">
            <summary>
            Multiply two points.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint3t.op_Multiply(OpenCLDotNet.Core.CLPoint3t,OpenCLDotNet.Core.size_t)">
            <summary>
            Multiply a point and a scalar.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint3t.op_Multiply(OpenCLDotNet.Core.size_t,OpenCLDotNet.Core.CLPoint3t)">
            <summary>
            Multiply a point and a scalar.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint3t.op_Division(OpenCLDotNet.Core.CLPoint3t,OpenCLDotNet.Core.CLPoint3t)">
            <summary>
            Divide two points.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint3t.op_Division(OpenCLDotNet.Core.CLPoint3t,OpenCLDotNet.Core.size_t)">
            <summary>
            Divide a point and a scalar.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint3t.op_Division(OpenCLDotNet.Core.size_t,OpenCLDotNet.Core.CLPoint3t)">
            <summary>
            Divide a scalar and a point.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint3t.ToString">
            <summary>
            Vector as a string.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint3t.Distance(OpenCLDotNet.Core.CLPoint3t,OpenCLDotNet.Core.CLPoint3t)">
            <summary>
            Distance between two points.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint3t.SqrDistance(OpenCLDotNet.Core.CLPoint3t,OpenCLDotNet.Core.CLPoint3t)">
            <summary>
            Square distance between two points.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint3t.Min(OpenCLDotNet.Core.CLPoint3t,OpenCLDotNet.Core.size_t)">
            <summary>
            The minimum value between s and each component in point.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint3t.Min(OpenCLDotNet.Core.CLPoint3t,OpenCLDotNet.Core.CLPoint3t)">
            <summary>
            The minimum value between each component in points.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint3t.Max(OpenCLDotNet.Core.CLPoint3t,OpenCLDotNet.Core.size_t)">
            <summary>
            The maximum value between s and each component in point.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint3t.Max(OpenCLDotNet.Core.CLPoint3t,OpenCLDotNet.Core.CLPoint3t)">
            <summary>
            The maximum value between each component in points.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint3t.Clamp(OpenCLDotNet.Core.CLPoint3t,OpenCLDotNet.Core.size_t,OpenCLDotNet.Core.size_t)">
            <summary>
            Clamp each component to specified min and max.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint3t.Clamp(OpenCLDotNet.Core.CLPoint3t,OpenCLDotNet.Core.CLPoint3t,OpenCLDotNet.Core.CLPoint3t)">
            <summary>
            Clamp each component to specified min and max.
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLPoint3t.Permutate(System.Int32,System.Int32,System.Int32)">
            <summary>
            Create a new point by reordering the componets.
            </summary>
            <param name="i">The index to take x value from.></param>
            <param name="j">The index to take y value from.</param>
            <param name="k">The index to take z value from.</param>
            <returns>The new vector</returns>
        </member>
        <member name="T:OpenCLDotNet.Core.CLRegion1t">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Core.CLRegion1t.Origion">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Core.CLRegion1t.Size">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLRegion1t.#ctor(OpenCLDotNet.Core.size_t,OpenCLDotNet.Core.size_t)">
            <summary>
            
            </summary>
            <param name="origion"></param>
            <param name="size"></param>
        </member>
        <member name="M:OpenCLDotNet.Core.CLRegion1t.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:OpenCLDotNet.Core.CLRegion2t">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Core.CLRegion2t.Origion">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Core.CLRegion2t.Size">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Core.CLRegion2t.Length">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLRegion2t.#ctor(OpenCLDotNet.Core.CLPoint2t,OpenCLDotNet.Core.CLPoint2t)">
            <summary>
            
            </summary>
            <param name="origion"></param>
            <param name="size"></param>
        </member>
        <member name="M:OpenCLDotNet.Core.CLRegion2t.#ctor(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:OpenCLDotNet.Core.CLRegion2t.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:OpenCLDotNet.Core.CLRegion3t">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Core.CLRegion3t.Origion">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Core.CLRegion3t.Size">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Core.CLRegion3t.#ctor(OpenCLDotNet.Core.CLPoint3t,OpenCLDotNet.Core.CLPoint3t)">
            <summary>
            
            </summary>
            <param name="origion"></param>
            <param name="size"></param>
        </member>
        <member name="M:OpenCLDotNet.Core.CLRegion3t.#ctor(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:OpenCLDotNet.Core.CLRegion3t.#ctor(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="depth"></param>
        </member>
        <member name="M:OpenCLDotNet.Core.CLRegion3t.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:OpenCLDotNet.Buffers.CLBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLBuffer.#ctor(OpenCLDotNet.Core.CLContext,OpenCLDotNet.Core.CL_READ_WRITE,OpenCLDotNet.Core.CL_MEM_DATA_TYPE,System.UInt32)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="rw"></param>
            <param name="type"></param>
            <param name="length"></param>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLBuffer.#ctor(OpenCLDotNet.Core.CLContext,OpenCLDotNet.Core.CL_READ_WRITE,System.Array)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="rw"></param>
            <param name="data"></param>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLBuffer.#ctor(OpenCLDotNet.Core.CLContext,OpenCLDotNet.Core.CL_MEM_FLAGS,System.Array)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="flags"></param>
            <param name="data"></param>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLBuffer.#ctor(OpenCLDotNet.Core.CLContext,OpenCLDotNet.Core.CL_MEM_FLAGS,OpenCLDotNet.Core.CL_MEM_DATA_TYPE,System.UInt32)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="flags"></param>
            <param name="type"></param>
            <param name="length"></param>
        </member>
        <member name="P:OpenCLDotNet.Buffers.CLBuffer.RowPitch">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLBuffer.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLBuffer.CreateReadBuffer(OpenCLDotNet.Core.CLContext,System.Array)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLBuffer.CreateWriteBuffer(OpenCLDotNet.Core.CLContext,OpenCLDotNet.Core.CL_MEM_DATA_TYPE,System.UInt32)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="type"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLBuffer.Create(OpenCLDotNet.Core.CLContext,OpenCLDotNet.Core.CL_READ_WRITE,OpenCLDotNet.Core.CL_MEM_DATA_TYPE,System.UInt32)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="rw"></param>
            <param name="type"></param>
            <param name="length"></param>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLBuffer.Create(OpenCLDotNet.Core.CLContext,OpenCLDotNet.Core.CL_MEM_FLAGS,OpenCLDotNet.Core.CL_MEM_DATA_TYPE,System.UInt32)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="flags"></param>
            <param name="type"></param>
            <param name="length"></param>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLBuffer.Create(OpenCLDotNet.Core.CLContext,OpenCLDotNet.Core.CL_READ_WRITE,System.Array)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="rw"></param>
            <param name="data"></param>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLBuffer.Create(OpenCLDotNet.Core.CLContext,OpenCLDotNet.Core.CL_MEM_FLAGS,System.Array)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="flags"></param>
            <param name="data"></param>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLBuffer.Read(OpenCLDotNet.Events.CLCommandQueue,System.Array)">
            <summary>
            Enqueue commands to read from a buffer object.
            </summary>
            <param name="cmd">command_queue is a valid host 
            command-queue in which the read / write command will be queued. 
            command_queue and buffer must be created with the same OpenCL 
            context.</param>
            <param name="dst">The data to be read to</param>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLBuffer.Read(OpenCLDotNet.Events.CLCommandQueue,System.Array,System.UInt32,System.Boolean)">
            <summary>
            Enqueue commands to read from a buffer object.
            </summary>
            <param name="cmd">command_queue is a valid host 
            command-queue in which the read / write command will be queued. 
            command_queue and buffer must be created with the same OpenCL 
            context.</param>
            <param name="src_offset">offset is the offset in the source buffer 
            object to read from.</param>
            <param name="dst">The data to be read to</param>
            <param name="blocking">If the read and write operations are blocking
            or non-blocking</param>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLBuffer.Write(OpenCLDotNet.Events.CLCommandQueue,System.Array)">
            <summary>
            Enqueue commands to write to a buffer object from host memory.
            </summary>
            <param name="cmd">Refers to the command-queue in which the write 
            command will be queued. command_queue and buffer must be created 
            with the same OpenCL context.</param>
            <param name="src">The data to be written from.</param>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLBuffer.Write(OpenCLDotNet.Events.CLCommandQueue,System.Array,System.UInt32,System.Boolean)">
            <summary>
            Enqueue commands to write to a buffer object from host memory.
            </summary>
            <param name="cmd">Refers to the command-queue in which the write 
            command will be queued. command_queue and buffer must be created 
            with the same OpenCL context.</param>
            <param name="offset">The offset in the buffer object to write to.</param>
            <param name="src">The data to be written from.</param>
            <param name="blocking">Indicates if the write operations are 
            blocking or nonblocking.</param>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLBuffer.Copy(OpenCLDotNet.Events.CLCommandQueue)">
            <summary>
            Enqueues a command to copy a buffer object to another buffer object.
            </summary>
            <param name="cmd">Refers to the command-queue in which the write 
            command will be queued. command_queue and buffer must be created 
            with the same OpenCL context.</param>
            <returns>The copied buffer.</returns>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLBuffer.Copy(OpenCLDotNet.Events.CLCommandQueue,OpenCLDotNet.Buffers.CLBuffer,System.UInt32,System.UInt32)">
            <summary>
            Enqueues a command to copy a buffer object to another buffer object.
            </summary>
            <param name="cmd">The command-queue in which the copy command will be queued. 
            The OpenCL context associated with command_queue, src_buffer, 
            and dst_buffer must be the same</param>
            <param name="dst">The buffer to copy to.</param>
            <param name="src_offset">The offset where to begin copying data from src_buffer.</param>
            <param name="dst_size">The size to copy into the dst buffer.</param>
        </member>
        <member name="T:OpenCLDotNet.Buffers.CLImage">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImage.#ctor(OpenCLDotNet.Core.CLContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:OpenCLDotNet.Buffers.CLImage.Channels">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Buffers.CLImage.ChannelOrder">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Buffers.CLImage.ChannelType">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Buffers.CLImage.Region">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImage.Read(OpenCLDotNet.Events.CLCommandQueue,System.Array,OpenCLDotNet.Core.CLRegion3t,System.Boolean)">
            <summary>
            
            </summary>
            <param name="cmd"></param>
            <param name="region"></param>
            <param name="dst"></param>
            <param name="blocking"></param>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImage.Write(OpenCLDotNet.Events.CLCommandQueue,System.Array,OpenCLDotNet.Core.CLRegion3t,System.Boolean)">
            <summary>
            
            </summary>
            <param name="cmd"></param>
            <param name="region"></param>
            <param name="src"></param>
            <param name="blocking"></param>
            <exception cref="T:OpenCLDotNet.Utility.InvalidObjectExeception"></exception>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImage.Print(System.Text.StringBuilder)">
            <summary>
            
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImage.GetInfo(OpenCLDotNet.Core.CL_IMAGE_INFO)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImage.GetInfoUInt64(OpenCLDotNet.Core.CL_IMAGE_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImage.GetInfoFormat(OpenCLDotNet.Core.CL_IMAGE_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:OpenCLDotNet.Buffers.CLImage2D">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImage2D.#ctor(OpenCLDotNet.Core.CLContext,OpenCLDotNet.Buffers.CLImageParameters2D,OpenCLDotNet.Core.CL_READ_WRITE)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="rw"></param>
            <param name="param"></param>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImage2D.#ctor(OpenCLDotNet.Core.CLContext,OpenCLDotNet.Buffers.CLImageParameters2D,OpenCLDotNet.Core.CL_MEM_FLAGS)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="param"></param>
            <param name="flags"></param>
        </member>
        <member name="P:OpenCLDotNet.Buffers.CLImage2D.Width">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Buffers.CLImage2D.Height">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Buffers.CLImage2D.RowPitch">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImage2D.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImage2D.CreateReadImage2D(OpenCLDotNet.Core.CLContext,OpenCLDotNet.Buffers.CLImageParameters2D)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImage2D.CreateWriteImage2D(OpenCLDotNet.Core.CLContext,OpenCLDotNet.Buffers.CLImageParameters2D)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImage2D.Create(OpenCLDotNet.Core.CLContext,OpenCLDotNet.Buffers.CLImageParameters2D,OpenCLDotNet.Core.CL_READ_WRITE)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="rw"></param>
            <param name="data"></param>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImage2D.Create(OpenCLDotNet.Core.CLContext,OpenCLDotNet.Buffers.CLImageParameters2D,OpenCLDotNet.Core.CL_MEM_FLAGS)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="data"></param>
            <param name="flags"></param>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImage2D.Create(OpenCLDotNet.Core.CLContext,OpenCLDotNet.Buffers.CLImageParameters2D,System.Array)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="data"></param>
            <param name="source"></param>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImage2D.Copy(OpenCLDotNet.Events.CLCommandQueue,OpenCLDotNet.Core.CLPoint3t,OpenCLDotNet.Core.CLRegion3t)">
            <summary>
            
            </summary>
            <param name="cmd"></param>
            <param name="src_origin"></param>
            <param name="region"></param>
            <returns></returns>
            <exception cref="T:OpenCLDotNet.Utility.InvalidObjectExeception"></exception>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImage2D.Copy(OpenCLDotNet.Events.CLCommandQueue,OpenCLDotNet.Buffers.CLImage2D,OpenCLDotNet.Core.CLPoint3t,OpenCLDotNet.Core.CLRegion3t)">
            <summary>
            
            </summary>
            <param name="cmd"></param>
            <param name="dst"></param>
            <param name="src_origin"></param>
            <param name="region"></param>
            <exception cref="T:OpenCLDotNet.Utility.InvalidObjectExeception"></exception>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImage2D.Fill(OpenCLDotNet.Events.CLCommandQueue,OpenCLDotNet.Core.CLColorRGBA,OpenCLDotNet.Core.CLRegion3t)">
            <summary>
            
            </summary>
            <param name="cmd"></param>
            <param name="col"></param>
            <param name="region"></param>
            <exception cref="T:OpenCLDotNet.Utility.InvalidObjectExeception"></exception>
        </member>
        <member name="T:OpenCLDotNet.Buffers.CLImageDescription">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Buffers.CLImageDescription.MemType">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Buffers.CLImageDescription.Width">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Buffers.CLImageDescription.Height">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Buffers.CLImageDescription.Depth">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Buffers.CLImageDescription.ArraySize">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Buffers.CLImageDescription.RowPitch">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Buffers.CLImageDescription.SlicePitch">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Buffers.CLImageDescription.NumMipLevels">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Buffers.CLImageDescription.NumSamples">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Buffers.CLImageDescription.Buffer">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImageDescription.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:OpenCLDotNet.Buffers.CLImageFormat">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Buffers.CLImageFormat.ChannelOrder">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Buffers.CLImageFormat.ChannelType">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImageFormat.#ctor(OpenCLDotNet.Core.CL_CHANNEL_ORDER,OpenCLDotNet.Core.CL_CHANNEL_TYPE)">
            <summary>
            
            </summary>
            <param name="order"></param>
            <param name="type"></param>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImageFormat.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:OpenCLDotNet.Buffers.CLImageFormatKey">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Buffers.CLImageFormatKey.Context">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Buffers.CLImageFormatKey.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Buffers.CLImageFormatKey.MemType">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImageFormatKey.#ctor(OpenCLDotNet.Core.cl_context,OpenCLDotNet.Core.CL_MEM_FLAGS,OpenCLDotNet.Core.CL_MEM_OBJECT_TYPE)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="flags"></param>
            <param name="type"></param>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImageFormatKey.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:OpenCLDotNet.Buffers.CLImageParameters2D">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Buffers.CLImageParameters2D.Width">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Buffers.CLImageParameters2D.Height">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Buffers.CLImageParameters2D.Channels">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Buffers.CLImageParameters2D.ChannelOrder">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Buffers.CLImageParameters2D.ChannelType">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Buffers.CLImageParameters2D.DataType">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Buffers.CLImageParameters2D.DataLength">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Buffers.CLImageParameters2D.SourceLength">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Buffers.CLImageParameters2D.Source">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImageParameters2D.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImageParameters2D.#ctor(OpenCLDotNet.Buffers.CLImage2D)">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImageParameters2D.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImageParameters2D.GetSupportedImageFormats(OpenCLDotNet.Core.cl_context,OpenCLDotNet.Core.CL_MEM_FLAGS)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImageParameters2D.IsValidSize">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImageParameters2D.IsValidChannel">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImageParameters2D.IsValidArrayData">
            <summary>
            
            </summary>
            <returns></returns>
            <exception cref="T:System.NullReferenceException"></exception>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImageParameters2D.IsValidDataType">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImageParameters2D.ImageFormatIsSupported(OpenCLDotNet.Core.cl_context,OpenCLDotNet.Buffers.CLImageFormat,OpenCLDotNet.Core.CL_MEM_FLAGS,OpenCLDotNet.Core.CL_ERROR@)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="format"></param>
            <param name="flags"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImageParameters2D.CreateImageFormat">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLImageParameters2D.CreateImageDescription">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:OpenCLDotNet.Buffers.CLMemObject">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLMemObject.#ctor(OpenCLDotNet.Core.CLContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:OpenCLDotNet.Buffers.CLMemObject.DataType">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Buffers.CLMemObject.DataSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Buffers.CLMemObject.Length">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Buffers.CLMemObject.RowPitch">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Buffers.CLMemObject.ByteSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Buffers.CLMemObject.Context">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Buffers.CLMemObject.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Buffers.CLMemObject.MemType">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Buffers.CLMemObject.CanReadWrite">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Buffers.CLMemObject.CanRead">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Buffers.CLMemObject.CanWrite">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Buffers.CLMemObject.IsReadOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Buffers.CLMemObject.IsWriteOnly">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLMemObject.CreateBufferFlags(OpenCLDotNet.Core.CL_READ_WRITE)">
            <summary>
            
            </summary>
            <param name="rw"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLMemObject.Print(System.Text.StringBuilder)">
            <summary>
            
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLMemObject.GetInfo(OpenCLDotNet.Core.CL_MEM_INFO)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLMemObject.GetInfoUInt64(OpenCLDotNet.Core.CL_MEM_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLMemObject.GetInfoUIntPtr(OpenCLDotNet.Core.CL_MEM_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLMemObject.GetInfoBool(OpenCLDotNet.Core.CL_MEM_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLMemObject.GetInfoObject(OpenCLDotNet.Core.CL_MEM_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLMemObject.Release">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCLDotNet.Buffers.CLSampler">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLSampler.#ctor(OpenCLDotNet.Core.CLContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLSampler.#ctor(OpenCLDotNet.Core.CLContext,OpenCLDotNet.Core.CL_SAMPLER_ADDRESSING_MODE,OpenCLDotNet.Core.CL_SAMPLER_FILTER_MODE)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="mode"></param>
            <param name="filter"></param>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLSampler.#ctor(OpenCLDotNet.Core.CLContext,OpenCLDotNet.Buffers.CLSamplerProperties)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="properties"></param>
        </member>
        <member name="P:OpenCLDotNet.Buffers.CLSampler.Context">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLSampler.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLSampler.Create(OpenCLDotNet.Core.CLContext,OpenCLDotNet.Buffers.CLSamplerProperties)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="properties"></param>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLSampler.Print(System.Text.StringBuilder)">
            <summary>
            
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLSampler.GetInfo(OpenCLDotNet.Core.CL_SAMPLER_INFO)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLSampler.GetInfoUInt64(OpenCLDotNet.Core.CL_SAMPLER_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLSampler.GetInfoObject(OpenCLDotNet.Core.CL_SAMPLER_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLSampler.GetInfoObjectArray(OpenCLDotNet.Core.CL_SAMPLER_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLSampler.GetInfoBool(OpenCLDotNet.Core.CL_SAMPLER_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLSampler.GetInfoFloat(OpenCLDotNet.Core.CL_SAMPLER_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLSampler.Release">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCLDotNet.Buffers.CLSamplerProperties">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Buffers.CLSamplerProperties.NormalizedCoords">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Buffers.CLSamplerProperties.AddressingMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Buffers.CLSamplerProperties.FilterMode">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLSamplerProperties.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLSamplerProperties.#ctor(System.Boolean,OpenCLDotNet.Core.CL_SAMPLER_ADDRESSING_MODE,OpenCLDotNet.Core.CL_SAMPLER_FILTER_MODE)">
            <summary>
            
            </summary>
            <param name="normalizeCoords"></param>
            <param name="mode"></param>
            <param name="filter"></param>
        </member>
        <member name="P:OpenCLDotNet.Buffers.CLSamplerProperties.Default">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLSamplerProperties.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:OpenCLDotNet.Buffers.CLSubBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLSubBuffer.#ctor(OpenCLDotNet.Buffers.CLBuffer,OpenCLDotNet.Core.CLRegion1t)">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <param name="region"></param>
        </member>
        <member name="P:OpenCLDotNet.Buffers.CLSubBuffer.Buffer">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Buffers.CLSubBuffer.Region">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Buffers.CLSubBuffer.IsValid">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Buffers.CLSubBuffer.RowPitch">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLSubBuffer.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Buffers.CLSubBuffer.Create(OpenCLDotNet.Buffers.CLBuffer,OpenCLDotNet.Core.CLRegion1t,OpenCLDotNet.Core.CL_MEM_FLAGS)">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <param name="region"></param>
            <param name="flags"></param>
        </member>
        <member name="M:OpenCLDotNet.Events.CLCommandQueue.#ctor(OpenCLDotNet.Core.CLContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:OpenCLDotNet.Events.CLCommandQueue.#ctor(OpenCLDotNet.Core.CLContext,OpenCLDotNet.Events.CLCommandQueueProperties)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="properties"></param>
        </member>
        <member name="P:OpenCLDotNet.Events.CLCommandQueue.Context">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Events.CLCommandQueue.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Events.CLCommandQueue.Create(OpenCLDotNet.Core.CLContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:OpenCLDotNet.Events.CLCommandQueue.Create(OpenCLDotNet.Core.CLContext,OpenCLDotNet.Events.CLCommandQueueProperties)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="properties"></param>
        </member>
        <member name="M:OpenCLDotNet.Events.CLCommandQueue.Print(System.Text.StringBuilder)">
            <summary>
            
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:OpenCLDotNet.Events.CLCommandQueue.GetInfo(OpenCLDotNet.Core.CL_COMMAND_QUEUE_INFO)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Events.CLCommandQueue.GetInfoUInt64(OpenCLDotNet.Core.CL_COMMAND_QUEUE_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Events.CLCommandQueue.GetInfoObject(OpenCLDotNet.Core.CL_COMMAND_QUEUE_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Events.CLCommandQueue.GetInfoObjectArray(OpenCLDotNet.Core.CL_COMMAND_QUEUE_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:OpenCLDotNet.Events.CLCommandQueueProperties">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Events.CLCommandQueueProperties.Properties">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Events.CLCommandQueueProperties.QueueSize">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Events.CLCommandQueueProperties.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Events.CLCommandQueueProperties.Default">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Events.CLCommandQueueProperties.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Events.CLEvent.#ctor(OpenCLDotNet.Core.CLContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:OpenCLDotNet.Events.CLEvent.Context">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Events.CLEvent.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Events.CLEvent.Create(OpenCLDotNet.Core.CLContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:OpenCLDotNet.Events.CLEvent.Print(System.Text.StringBuilder)">
            <summary>
            
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:OpenCLDotNet.Events.CLEvent.GetInfo(OpenCLDotNet.Core.CL_EVENT_INFO)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Events.CLEvent.GetInfo(OpenCLDotNet.Core.CL_PROFILING_INFO)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Events.CLEvent.GetInfoUInt64(OpenCLDotNet.Core.CL_EVENT_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Events.CLEvent.GetInfoUInt64(OpenCLDotNet.Core.CL_PROFILING_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Events.CLEvent.GetInfoObject(OpenCLDotNet.Core.CL_EVENT_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:OpenCLDotNet.Programs.CLKernel">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.#ctor(OpenCLDotNet.Programs.CLProgram,System.String)">
            <summary>
            
            </summary>
            <param name="program"></param>
            <param name="name"></param>
        </member>
        <member name="P:OpenCLDotNet.Programs.CLKernel.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Programs.CLKernel.Program">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Programs.CLKernel.NumArguments">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Programs.CLKernel.Arguments">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.Create(OpenCLDotNet.Programs.CLProgram,System.String)">
            <summary>
            
            </summary>
            <param name="program"></param>
            <param name="name"></param>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.CreateArguments(System.Boolean)">
            <summary>
            
            </summary>
            <param name="hasArgInfo"></param>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.GetArgument(System.UInt32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.AllArgumentSet">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.SetBuffer(OpenCLDotNet.Buffers.CLBuffer,System.UInt32)">
            <summary>
            
            </summary>
            <param name="arg"></param>
            <param name="index"></param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.GetBuffer(System.UInt32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.SetSubBuffer(OpenCLDotNet.Buffers.CLSubBuffer,System.UInt32)">
            <summary>
            
            </summary>
            <param name="arg"></param>
            <param name="index"></param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.GetSubBuffer(System.UInt32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.SetImage(OpenCLDotNet.Buffers.CLImage,System.UInt32)">
            <summary>
            
            </summary>
            <param name="arg"></param>
            <param name="index"></param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.GetImage(System.UInt32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.SetSampler(OpenCLDotNet.Buffers.CLSampler,System.UInt32)">
            <summary>
            
            </summary>
            <param name="arg"></param>
            <param name="index"></param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.GetSampler(System.UInt32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.SetDouble(System.Double,System.UInt32)">
            <summary>
            
            </summary>
            <param name="arg"></param>
            <param name="index"></param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.GetDouble(System.UInt32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.SetFloat(System.Single,System.UInt32)">
            <summary>
            
            </summary>
            <param name="arg"></param>
            <param name="index"></param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.GetFloat(System.UInt32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.SetInt(System.Int32,System.UInt32)">
            <summary>
            
            </summary>
            <param name="arg"></param>
            <param name="index"></param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.GetInt(System.UInt32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.Print(System.Text.StringBuilder)">
            <summary>
            
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.GetInfo(OpenCLDotNet.Core.CL_KERNEL_INFO)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.GetInfo(OpenCLDotNet.Core.CL_KERNEL_ARG_INFO,System.UInt32)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.GetInfo(OpenCLDotNet.Core.CL_KERNEL_WORK_GROUP_INFO,OpenCLDotNet.Core.cl_device_id)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="device"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.GetInfoUInt64(OpenCLDotNet.Core.CL_KERNEL_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.GetInfoUInt64(OpenCLDotNet.Core.CL_KERNEL_ARG_INFO,System.UInt32)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.GetInfoUInt64(OpenCLDotNet.Core.CL_KERNEL_WORK_GROUP_INFO,OpenCLDotNet.Core.cl_device_id)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="device"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.GetInfoString(OpenCLDotNet.Core.CL_KERNEL_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.GetInfoObject(OpenCLDotNet.Core.CL_KERNEL_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.GetInfoString(OpenCLDotNet.Core.CL_KERNEL_ARG_INFO,System.UInt32)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.GetInfoSizetArray(OpenCLDotNet.Core.CL_KERNEL_WORK_GROUP_INFO,OpenCLDotNet.Core.cl_device_id)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="device"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.Release">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.CheckIndex(System.UInt32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernel.CheckKernelArg(OpenCLDotNet.Programs.CLKernelArg)">
            <summary>
            
            </summary>
            <param name="kernel_arg"></param>
            <exception cref="T:System.NullReferenceException"></exception>
        </member>
        <member name="T:OpenCLDotNet.Programs.CLKernelArg">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Programs.CLKernelArg.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Programs.CLKernelArg.ArgType">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Programs.CLKernelArg.AddressQualifier">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Programs.CLKernelArg.AccessQualifier">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Programs.CLKernelArg.ArgObject">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernelArg.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernelArg.#ctor(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernelArg.#ctor(System.String,System.String,System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="argType"></param>
            <param name="address"></param>
            <param name="access"></param>
            <param name="arg"></param>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLKernelArg.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:OpenCLDotNet.Programs.CLProgram.OPTION_KERNEL_ARG_INFO">
            <summary>
            Enables the kerenls argument info in the program to be available.
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Programs.CLProgram.OPTION_SINGLE_PRECISION_CONSTANT">
            <summary>
            Treat double precision floating-point constant as single precision constant.
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Programs.CLProgram.OPTION_DENORMS_ARE_ZERO">
            <summary>
            This option controls how single precision and double precision denormalized numbers are handled. 
            If specified as a build option, the single precision denormalized numbers may be flushed
            to zero and if the optional extension for double precision is supported, double precision
            denormalized numbers may also be flushed to zero. This is intended to be a performance 
            hint and the OpenCL compiler can choose not to flush denorms to zero if the device supports 
            single precision (or double precision) denormalized numbers.
            This option is ignored for single precision numbers if the device does not support single 
            precision denormalized numbers i.e.CL_FP_DENORM bit is not set in CL_DEVICE_SINGLE_FP_CONFIG.
            This option is ignored for double precision numbers if the device does not support double 
            precision or if it does support double precison but CL_FP_DENORM bit is not set in CL_DEVICE_DOUBLE_FP_CONFIG.
            This flag only applies for scalar and vector single precision floating-point variables and
            computations on these floating-point variables inside a program.It does not apply to reading
            from or writing to image objects.
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Programs.CLProgram.OPTION_OPT_DISABLE">
            <summary>
            This option disables all optimizations. The default is optimizations are enabled.
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Programs.CLProgram.OPTION_STRICT_ALIASING">
            <summary>
            This option allows the compiler to assume the strictest aliasing rules.
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Programs.CLProgram.OPTION_MAD_ENABLED">
            <summary>
            Allow a * b + c to be replaced by a mad. The mad computes a * b + c with reduced accuracy. 
            For example, some OpenCL devices implement mad as truncate the result of a * b before adding it to c.
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Programs.CLProgram.OPTION_NO_SIGNED_ZEROS">
            <summary>
            Allow optimizations for floating-point arithmetic that ignore the signedness of zero. 
            IEEE 754 arithmetic specifies the behavior of distinct +0.0 and -0.0 values, 
            which then prohibits simplification of expressions such as x+0.0 or 0.0*x (even with -clfinite-math only). 
            This option implies that the sign of a zero result isn't significant.
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Programs.CLProgram.OPTION_UNSAFE_MATH_OPTIMIZATIONS">
            <summary>
            Allow optimizations for floating-point arithmetic that (a) assume that arguments and results are valid,
            (b) may violate IEEE 754 standard and (c) may violate the OpenCL numerical compliance requirements as 
            defined in section 7.4 for single-precision floating-point, section 9.3.9 for double-precision floating-point, 
            and edge case behavior in section 7.5. This option includes the -cl-no-signed-zeros and -cl-mad-enable options.
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Programs.CLProgram.OPTION_FINITE_MATH_ONLY">
            <summary>
            Allow optimizations for floating-point arithmetic that assume that arguments and results are not NaNs or ±∞.
            This option may violate the OpenCL numerical compliance requirements defined in in section 7.4 
            for single-precision floating-point, section 9.3.9 for double-precision floating-point, 
            and edge case behavior in section 7.5.
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Programs.CLProgram.OPTION_FAST_RELAXED_MATH">
            <summary>
            Sets the optimization options -cl-finite-math-only and -cl-unsafe-math-optimizations. 
            This allows optimizations for floating-point arithmetic that may violate the IEEE 754 standard and the
            OpenCL numerical compliance requirements defined in the specification in section 7.4 for single-precision
            floating-point, section 9.3.9 for double-precision floating-point, and edge case behavior in section 7.5.
            This option causes the preprocessor macro __FAST_RELAXED_MATH__ to be defined in the OpenCL program.
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Programs.CLProgram.OPTION_DISABLE_WARNINGS">
            <summary>
            Inhibit all warning messages.
            </summary>
        </member>
        <member name="F:OpenCLDotNet.Programs.CLProgram.OPTION_WARNINGS_AS_ERRORS">
            <summary>
            Make all warnings into errors.
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Programs.CLProgram.DefaultOptions">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.#ctor(OpenCLDotNet.Core.CLContext,System.String,System.Text.Encoding,System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="filename"></param>
            <param name="encoding"></param>
            <param name="options"></param>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.#ctor(OpenCLDotNet.Core.CLContext,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="program_text"></param>
            <param name="options"></param>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.#ctor(OpenCLDotNet.Core.CLContext,System.Collections.Generic.IList{System.Byte[]},System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="binaries"></param>
            <param name="options"></param>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.#ctor(OpenCLDotNet.Core.CLContext,System.Byte[],System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="binary"></param>
            <param name="options"></param>
        </member>
        <member name="P:OpenCLDotNet.Programs.CLProgram.Context">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Programs.CLProgram.Options">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Programs.CLProgram.HasKernelArgumentInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Programs.CLProgram.Source">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Programs.CLProgram.NumKernels">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Programs.CLProgram.Kernels">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCLDotNet.Programs.CLProgram.Command">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.Create(OpenCLDotNet.Core.CLContext,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="program_text"></param>
            <param name="options"></param>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.Create(OpenCLDotNet.Core.CLContext,System.Collections.Generic.IList{System.Byte[]},System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="binarys"></param>
            <param name="options"></param>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.Create(OpenCLDotNet.Core.CLContext,System.Byte[],System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="binary"></param>
            <param name="options"></param>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.Create(System.String)">
            <summary>
            
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.Run(System.String,System.UInt32,System.UInt32)">
            <summary>
            
            </summary>
            <param name="kernel_name"></param>
            <param name="offset"></param>
            <param name="size"></param>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.Run(System.String,OpenCLDotNet.Core.CLPoint3t,OpenCLDotNet.Core.CLPoint3t)">
            <summary>
            
            </summary>
            <param name="kernel_name"></param>
            <param name="offset"></param>
            <param name="size"></param>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.RoundUp(OpenCLDotNet.Core.size_t,OpenCLDotNet.Core.size_t)">
            <summary>
            
            </summary>
            <param name="groupSize"></param>
            <param name="globalSize"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.CreateCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.CreateKerels">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.FindKernel(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.HasKernel(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.GetKernelName(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.CreateReadBuffer(System.String,System.UInt32,System.Array)">
            <summary>
            
            </summary>
            <param name="kernel_name"></param>
            <param name="index"></param>
            <param name="data"></param>
            <exception cref="T:System.NullReferenceException"></exception>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.CreateWriteBuffer(System.String,System.UInt32,OpenCLDotNet.Core.CL_MEM_DATA_TYPE,System.UInt32)">
            <summary>
            
            </summary>
            <param name="kernel_name"></param>
            <param name="index"></param>
            <param name="type"></param>
            <param name="length"></param>
            <exception cref="T:System.NullReferenceException"></exception>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.CreateReadImage2D(System.String,System.UInt32,OpenCLDotNet.Buffers.CLImageParameters2D)">
            <summary>
            
            </summary>
            <param name="kernel_name"></param>
            <param name="index"></param>
            <param name="param"></param>
            <exception cref="T:System.NullReferenceException"></exception>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.CreateWriteImage2D(System.String,System.UInt32,OpenCLDotNet.Buffers.CLImageParameters2D)">
            <summary>
            
            </summary>
            <param name="kernel_name"></param>
            <param name="index"></param>
            <param name="param"></param>
            <exception cref="T:System.NullReferenceException"></exception>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.CreateSampler(System.String,System.UInt32,OpenCLDotNet.Core.CL_SAMPLER_ADDRESSING_MODE,OpenCLDotNet.Core.CL_SAMPLER_FILTER_MODE)">
            <summary>
            
            </summary>
            <param name="kernel_name"></param>
            <param name="index"></param>
            <param name="mode"></param>
            <param name="filter"></param>
            <exception cref="T:System.NullReferenceException"></exception>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.CreateSampler(System.String,System.UInt32,OpenCLDotNet.Buffers.CLSamplerProperties)">
            <summary>
            
            </summary>
            <param name="kernel_name"></param>
            <param name="index"></param>
            <param name="properties"></param>
            <exception cref="T:System.NullReferenceException"></exception>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.SetBuffer(System.String,OpenCLDotNet.Buffers.CLBuffer,System.UInt32)">
            <summary>
            
            </summary>
            <param name="kernel_name"></param>
            <param name="buffer"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.GetBuffer(System.String,System.UInt32)">
            <summary>
            
            </summary>
            <param name="kernel_name"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.SetImage(System.String,OpenCLDotNet.Buffers.CLImage,System.UInt32)">
            <summary>
            
            </summary>
            <param name="kernel_name"></param>
            <param name="image"></param>
            <param name="index"></param>
            <exception cref="T:System.NullReferenceException"></exception>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.SetSampler(System.String,OpenCLDotNet.Buffers.CLSampler,System.UInt32)">
            <summary>
            
            </summary>
            <param name="kernel_name"></param>
            <param name="sampler"></param>
            <param name="index"></param>
            <exception cref="T:System.NullReferenceException"></exception>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.SetInt(System.String,System.Int32,System.UInt32)">
            <summary>
            
            </summary>
            <param name="kernel_name"></param>
            <param name="arg"></param>
            <param name="index"></param>
            <exception cref="T:System.NullReferenceException"></exception>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.ReadBuffer(System.String,System.Boolean,System.UInt32,System.Array)">
            <summary>
            
            </summary>
            <param name="kernel_name"></param>
            <param name="blocking"></param>
            <param name="index"></param>
            <param name="dst"></param>
            <exception cref="T:System.NullReferenceException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
            <exception cref="T:System.InvalidCastException"></exception>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.WriteBuffer(System.String,System.Boolean,System.UInt32,System.Array)">
            <summary>
            
            </summary>
            <param name="kernel_name"></param>
            <param name="blocking"></param>
            <param name="index"></param>
            <param name="src"></param>
            <exception cref="T:System.NullReferenceException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
            <exception cref="T:System.InvalidCastException"></exception>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.ReadImage(System.String,System.Boolean,System.UInt32,System.Array)">
            <summary>
            
            </summary>
            <param name="kernel_name"></param>
            <param name="blocking"></param>
            <param name="index"></param>
            <param name="dst"></param>
            <exception cref="T:System.NullReferenceException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
            <exception cref="T:System.InvalidCastException"></exception>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.WriteImage(System.String,System.Boolean,System.UInt32,System.Array)">
            <summary>
            
            </summary>
            <param name="kernel_name"></param>
            <param name="blocking"></param>
            <param name="index"></param>
            <param name="src"></param>
            <exception cref="T:System.NullReferenceException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
            <exception cref="T:System.InvalidCastException"></exception>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.HasOption(System.String)">
            <summary>
            
            </summary>
            <param name="option"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.CheckForKernelArgumentInfo(System.String)">
            <summary>
            
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.CreateOptions(System.String)">
            <summary>
            
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.GetBinary">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.GetBinary(System.Collections.Generic.List{System.Byte[]})">
            <summary>
            
            </summary>
            <param name="binaries"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.Print(System.Text.StringBuilder)">
            <summary>
            
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.GetInfo(OpenCLDotNet.Core.CL_PROGRAM_BUILD_INFO,OpenCLDotNet.Core.cl_device_id)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="device"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.GetInfo(OpenCLDotNet.Core.CL_PROGRAM_INFO)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.GetBuildInfoUInt64(OpenCLDotNet.Core.CL_PROGRAM_BUILD_INFO,OpenCLDotNet.Core.cl_device_id)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="device"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.GetInfoUInt64(OpenCLDotNet.Core.CL_PROGRAM_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.GetBuildInfoString(OpenCLDotNet.Core.CL_PROGRAM_BUILD_INFO,OpenCLDotNet.Core.cl_device_id)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="device"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.GetInfoString(OpenCLDotNet.Core.CL_PROGRAM_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.GetInfoBool(OpenCLDotNet.Core.CL_PROGRAM_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.GetInfoObject(OpenCLDotNet.Core.CL_PROGRAM_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.GetInfoObjectArray(OpenCLDotNet.Core.CL_PROGRAM_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.GetInfoSizetArray(OpenCLDotNet.Core.CL_PROGRAM_INFO)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.Release">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.CheckKernel(OpenCLDotNet.Programs.CLKernel,System.String)">
            <summary>
            
            </summary>
            <param name="kernel"></param>
            <param name="kernel_name"></param>
            <exception cref="T:System.NullReferenceException"></exception>
        </member>
        <member name="M:OpenCLDotNet.Programs.CLProgram.CheckKernelArg(OpenCLDotNet.Programs.CLKernelArg)">
            <summary>
            
            </summary>
            <param name="kernel_arg"></param>
            <exception cref="T:System.NullReferenceException"></exception>
        </member>
        <member name="M:OpenCLDotNet.Utility.ErrorUtil.CheckArray(System.Array,System.UInt32)">
            <summary>
            Check a array that is passed to the c++ dll.
            If the array is invalid it will cause a hard crash.
            Array can be null if count is 0.
            </summary>
            <param name="array"></param>
            <param name="count"></param>
        </member>
        <member name="T:OpenCLDotNet.Utility.CLUnmanagedResourcesReleasedExeception">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCLDotNet.Utility.CLUnmanagedResourcesNotReleasedExeception">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCLDotNet.Utility.InvalidArrayExeception">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCLDotNet.Utility.InvalidObjectExeception">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCLDotNet.Utility.InvalidDataSizeExeception">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCLDotNet.Utility.InvalidDataTypeExeception">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCLDotNet.Utility.ReadWriteExeception">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
